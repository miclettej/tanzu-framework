/* tslint:disable */
export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"api-client.interface.js","sourceRoot":"","sources":["../../../../../projects/tanzu-ui-api-lib/src/lib/swagger/api-client.interface.ts"],"names":[],"mappings":"AAAA,oBAAoB","sourcesContent":["/* tslint:disable */\n\nimport { Observable } from 'rxjs';\nimport { HttpOptions } from './';\nimport * as models from './models';\n\nexport interface APIClientInterface {\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getUI(\n    requestHttpOptions?: HttpOptions\n  ): Observable<File>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getUIFile(\n    args: {\n      filename: string,  // UI file name\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<File>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getFeatureFlags(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.Features>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getTanzuEdition(\n    requestHttpOptions?: HttpOptions\n  ): Observable<string>;\n\n  /**\n   * Response generated for [ 201 ] HTTP response code.\n   */\n  verifyAccount(\n    args: {\n      credentials?: models.AviControllerParams,  // (optional) Avi controller credentials\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<void>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  verifyLdapConnect(\n    args: {\n      credentials?: models.LdapParams,  // (optional) LDAP configuration\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.LdapTestResult>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  verifyLdapBind(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.LdapTestResult>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  verifyLdapUserSearch(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.LdapTestResult>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  verifyLdapGroupSearch(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.LdapTestResult>;\n\n  /**\n   * Response generated for [ 201 ] HTTP response code.\n   */\n  verifyLdapCloseConnection(\n    requestHttpOptions?: HttpOptions\n  ): Observable<void>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAviClouds(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AviCloud[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAviServiceEngineGroups(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AviServiceEngineGroup[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAviVipNetworks(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AviVipNetwork[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getProvider(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.ProviderInfo>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVsphereThumbprint(\n    args: {\n      host: string,  // vSphere host\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereThumbprint>;\n\n  /**\n   * Response generated for [ 201 ] HTTP response code.\n   */\n  setVSphereEndpoint(\n    args: {\n      credentials?: models.VSphereCredentials,  // (optional) vSphere credentials\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VsphereInfo>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVSphereDatacenters(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereDatacenter[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVSphereDatastores(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereDatastore[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVSphereFolders(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereFolder[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVSphereComputeResources(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereManagementObject[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVSphereResourcePools(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereResourcePool[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVSphereNetworks(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereNetwork[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVSphereNodeTypes(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.NodeType[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVSphereOSImages(\n    args: {\n      dc: string,  // datacenter managed object Id, e.g. datacenter-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VSphereVirtualMachine[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  exportTKGConfigForVsphere(\n    args: {\n      params: models.VsphereRegionalClusterParams,  // params to generate tkg configuration for vsphere\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  applyTKGConfigForVsphere(\n    args: {\n      params: models.VsphereRegionalClusterParams,  // params to apply changes to tkg configuration for vsphere\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.ConfigFileInfo>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  importTKGConfigForVsphere(\n    args: {\n      params: models.ConfigFile,  // config file from which to generate tkg configuration for vsphere\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.VsphereRegionalClusterParams>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  createVSphereRegionalCluster(\n    args: {\n      params: models.VsphereRegionalClusterParams,  // params to create a regional cluster\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string>;\n\n  /**\n   * Response generated for [ 201 ] HTTP response code.\n   */\n  setAWSEndpoint(\n    args: {\n      accountParams?: models.AWSAccountParams,  // (optional) AWS account parameters\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<void>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getVPCs(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.Vpc[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAWSNodeTypes(\n    args: {\n      az?: string,  // (optional) AWS availability zone, e.g. us-west-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAWSRegions(\n    requestHttpOptions?: HttpOptions\n  ): Observable<string[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAWSOSImages(\n    args: {\n      region: string,  // AWS region, e.g. us-west-2\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AWSVirtualMachine[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAWSCredentialProfiles(\n    requestHttpOptions?: HttpOptions\n  ): Observable<string[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAWSAvailabilityZones(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AWSAvailabilityZone[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAWSSubnets(\n    args: {\n      vpcId: string,  // VPC Id\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AWSSubnet[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  exportTKGConfigForAWS(\n    args: {\n      params: models.AWSRegionalClusterParams,  // parameters to generate TKG configuration file for AWS\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  applyTKGConfigForAWS(\n    args: {\n      params: models.AWSRegionalClusterParams,  // parameters to apply changes to TKG configuration file for AWS\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.ConfigFileInfo>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  createAWSRegionalCluster(\n    args: {\n      params: models.AWSRegionalClusterParams,  // parameters to create a regional cluster\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  importTKGConfigForAWS(\n    args: {\n      params: models.ConfigFile,  // config file from which to generate tkg configuration for aws\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AWSRegionalClusterParams>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAzureEndpoint(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureAccountParams>;\n\n  /**\n   * Response generated for [ 201 ] HTTP response code.\n   */\n  setAzureEndpoint(\n    args: {\n      accountParams?: models.AzureAccountParams,  // (optional) Azure account parameters\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<void>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAzureResourceGroups(\n    args: {\n      location: string,  // Azure region\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureResourceGroup[]>;\n\n  /**\n   * Response generated for [ 201 ] HTTP response code.\n   */\n  createAzureResourceGroup(\n    args: {\n      params: models.AzureResourceGroup,  // parameters to create a new Azure resource group\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAzureVnets(\n    args: {\n      resourceGroupName: string,  // Name of the Azure resource group\n      location: string,  // Azure region\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureVirtualNetwork[]>;\n\n  /**\n   * Response generated for [ 201 ] HTTP response code.\n   */\n  createAzureVirtualNetwork(\n    args: {\n      resourceGroupName: string,  // Name of the Azure resource group\n      params: models.AzureVirtualNetwork,  // parameters to create a new Azure Virtual network\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAzureOSImages(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureVirtualMachine[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAzureRegions(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureLocation[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  getAzureInstanceTypes(\n    args: {\n      location: string,  // Azure region name\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureInstanceType[]>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  exportTKGConfigForAzure(\n    args: {\n      params: models.AzureRegionalClusterParams,  // parameters to generate TKG configuration file for Azure\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  applyTKGConfigForAzure(\n    args: {\n      params: models.AzureRegionalClusterParams,  // parameters to apply changes to TKG configuration file for Azure\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.ConfigFileInfo>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  createAzureRegionalCluster(\n    args: {\n      params: models.AzureRegionalClusterParams,  // parameters to create a regional cluster\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  importTKGConfigForAzure(\n    args: {\n      params: models.ConfigFile,  // config file from which to generate tkg configuration for azure\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.AzureRegionalClusterParams>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  checkIfDockerDaemonAvailable(\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.DockerDaemonStatus>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  exportTKGConfigForDocker(\n    args: {\n      params: models.DockerRegionalClusterParams,  // parameters to generate TKG configuration file for Docker\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  applyTKGConfigForDocker(\n    args: {\n      params: models.DockerRegionalClusterParams,  // parameters to apply changes to TKG configuration file for Docker\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.ConfigFileInfo>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  createDockerRegionalCluster(\n    args: {\n      params: models.DockerRegionalClusterParams,  // parameters to create a regional cluster\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<string>;\n\n  /**\n   * Response generated for [ 200 ] HTTP response code.\n   */\n  importTKGConfigForDocker(\n    args: {\n      params: models.ConfigFile,  // config file from which to generate tkg configuration for docker\n    },\n    requestHttpOptions?: HttpOptions\n  ): Observable<models.DockerRegionalClusterParams>;\n\n}\n"]}